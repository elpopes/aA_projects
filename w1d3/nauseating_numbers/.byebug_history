quit
n
display num
display pot
quit
display pot > num
pot
quit
3.potmo?
c.potmo?
3.is_prime?
display counter
display array
display counter.is_prime? && counter.potmo?
display counter
n
display pot - 1 == self
display self
display pot
quit
trig
quit
num
trig
trig.last
quit
display array
q
display array
quit
display grid[0]
display grid[0][index]
quit
display index
display row[index]
display row[0]
display row
display row[0
display grid
n
display tribonacci_number(n-1) + tribonacci_number(n-2)
s
n
display n
quit
display intersecting_factors
display numbers
quit
display intersecting_factors
display numbers
quit
display numbers
n
numbers
quit
display numbers
display m_factors
displa m_factors
q
n
display m_factors
n
display num
n
display m_factors.include?(num)
num
